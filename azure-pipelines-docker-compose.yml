# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- release-azure

pool:
  vmImage: ubuntu-latest

variables:
  tag: '$(Build.BuildId)'
  dockerSourceDirectory: '$(build.artifactStagingDirectory)/docker'
  publishDirectory: '$(build.artifactStagingDirectory)/drop/docker'
  deployDirectory: '/home/peedekza/docker'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    steps:
    - script: mkdir $(dockerSourceDirectory)
      displayName: 'Create docker directory'
    - script: cp -v docker-compose.yml $(dockerSourceDirectory)
      displayName: 'Copy docker-compose.yml to docker artifacts folder'
    - publish: $(build.artifactStagingDirectory)
      displayName: Publish build artifacts to artifacts folder
      artifact: drop
- stage: Deployment
  displayName: Deployment
  jobs:
    - job:
      displayName: Run docker compose
      steps:
      - checkout: none
        displayName: Skip Git Clone
      - task: DownloadPipelineArtifact@2
        displayName: Download Artifact
        inputs:
          targetPath: $(build.artifactStagingDirectory)
      - task: CopyFilesOverSSH@0
        displayName: Copy docker compose file to target
        inputs:
          sshEndpoint: 'vm-dev-postgres'
          sourceFolder: $(publishDirectory)
          contents: '**'
          targetFolder: $(deployDirectory)
          readyTimeout: '20000'
      - task: SSH@0
        displayName: Run docker compose command
        inputs:
          sshEndpoint: 'vm-dev-postgres'
          runOptions: 'commands'
          commands: |
            cd $(deployDirectory)
            cd $(deployDirectory)
            pwd
            # docker compose pull 
            # docker compose stop
            # docker compose rm -f
            # docker compose up -d
          readyTimeout: '20000'
      # - powershell: |
      #     Write-Host "Show all folder content"
      #     Get-ChildItem -Path $(build.artifactStagingDirectory)\*.* -Recurse -Force
      #   errorActionPreference: continue
      #   displayName: 'PowerShell Script List folder structure'


